const is = require('./../helpers/is');
const Provider = require('./provider');
const BaseProvider = require('./base-provider');

class ProvidersFactory {

    create(network) {
        this.provider = new Provider(network);

        const providerProxyHandler = {
            get: (obj, value) => {
                if (this.provider.hasOwnProperty(value)) {
                    return this.provider[value];
                }

                return this[value];
            },
            construct: (target, network) => {
                return new Provider(network);
            }
        }

        return new Proxy(Provider, providerProxyHandler);
    }

    reset(newProvider) {
        is(newProvider).instanceOf(BaseProvider);
        Object.assign(this.provider, newProvider);
    }
}

module.exports = ProvidersFactory;
