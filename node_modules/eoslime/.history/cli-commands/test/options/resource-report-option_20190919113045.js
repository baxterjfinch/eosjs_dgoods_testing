const Option = require('./../../option');
const CLITable = require('cli-table');
const eoslime = require('./../../../index');

class ResourceReportOption extends Option {
    constructor() {
        super(
            'resource-report',
            {
                "describe": "Provides you RAM and Bandwidth report for a contract. \n\nParameters: \nNetwork name or in case of custom: \n{ url: custom url, chainId: custom chain id }\n",
                "type": "string",
                "default": "false"
            }
        );

    }

    process(optionValue, args) {
        console.log(optionValue)
        if (optionValue) {
            console.log("here")
            const cliTable = new CLITable();
            args.eoslime.Contract.on('init', (contract) => {
                for (const functionName in contract) {
                    if (contract.hasOwnProperty(functionName)) {
                        const contractFunction = contract[functionName];

                        if (contractFunction.isTransactional) {
                            contractFunction.on('processed', (txReceipt) => {
                                cliTable.push({
                                    contract: contract.name,
                                    method: functionName,
                                    txReceipt: txReceipt
                                })
                            });
                        }
                    }
                }
            });

            args.testFramework.on('allFinished', () => {
                console.log(cliTable.toString());
            });
        }
    }
}

module.exports = new ResourceReportOption();
