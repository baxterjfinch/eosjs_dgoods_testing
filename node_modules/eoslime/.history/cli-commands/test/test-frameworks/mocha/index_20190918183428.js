const Mocha = require('mocha');
const mochaConfig = require('./mocha-config');

const EVENTS = {
    'allFinished': 'suite end'
}

class MochaFramework {
    constructor() {
        this.instance = new Mocha(mochaConfig);
        this.eventsHooks = [];

    }

    addTestFiles(testFiles) {
        testFiles.forEach(testFile => {
            this.instance.addFile(testFile);
        });
    }

    on(eventName, callback) {
        this.eventsHooks.push({
            event: EVENTS[eventName],
            callback: callback
        });
    }

    async runTests(...params) {
        const self = this;
        return new Promise((resolve, reject) => {

            const mochaRunner = self.instance.run(
                failures => {
                    process.exitCode = failures ? -1 : 0;
                    if (failures) {
                        return void reject(failures)
                    }

                    resolve();
                }
            );

            mochaRunner.suite.on(mocha.suite.on('pre-require', function (context) {
                const origIt = context.it;
                context.it = function (name, impl) {
                    return origIt.call(this, name, function () {
                        try {
                            let name = this.test.title;
                            let parent = this.test.parent;
                            while (parent != null) {
                                name = parent.title + ' ' + name;
                                parent = parent.parent;
                            }
                            root.testName = name;
                            return impl();
                        } catch (ex) {
                            throw ex;
                        }
                    });
                };
            });
              );
        for (let i = 0; i < self.eventsHooks.length; i++) {
            const eventHook = self.eventsHooks[i];
            mochaRunner.on(eventHook.event, eventHook.callback);
        }
    });
}
}

module.exports = MochaFramework;
